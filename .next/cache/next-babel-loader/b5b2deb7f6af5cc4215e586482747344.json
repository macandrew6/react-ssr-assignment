{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport data from './data/data.json'; // initial state\n\nconst startState = {\n  cards: []\n}; // actions\n\nexport const initialCards = () => {\n  return {\n    type: 'INITIAL_CARDS',\n    cards: data\n  };\n};\nexport const addItem = item => {\n  return {\n    type: 'ADD',\n    item\n  };\n}; // Reducers\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'INITIAL_CARDS':\n      return {\n        cards: action.cards\n      };\n\n    case 'ADD':\n      return _objectSpread({}, state, {\n        cards: [...state.cards, action.item]\n      });\n\n    default:\n      return state;\n  }\n}; // create store\n\nexport const initStore = (initState = startState) => {\n  return createStore(reducer, initState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};","map":{"version":3,"sources":["/Users/andrewmac/Desktop/ssr/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","data","startState","cards","initialCards","type","addItem","item","reducer","state","action","initStore","initState"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CAEA;;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB,C,CAIA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELF,IAAAA,KAAK,EAAEF;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAMK,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACLF,IAAAA,IAAI,EAAE,KADD;AAELE,IAAAA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAEO,MAAM,CAACP;AADT,OAAP;;AAGF,SAAK,KAAL;AACE,+BACKM,KADL;AAEEN,QAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBO,MAAM,CAACH,IAAxB;AAFT;;AAIF;AACE,aAAOE,KAAP;AAXJ;AAaD,CAdM,C,CAgBP;;AACA,OAAO,MAAME,SAAS,GAAG,CAACC,SAAS,GAAGV,UAAb,KAA4B;AACnD,SAAOL,WAAW,CAChBW,OADgB,EAEhBI,SAFgB,EAGhBb,mBAAmB,CAACD,eAAe,CAACE,eAAD,CAAhB,CAHH,CAAlB;AAKD,CANM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport data from './data/data.json';\n\n// initial state\nconst startState = {\n  cards: []\n};\n\n// actions\nexport const initialCards = () => {\n  return {\n    type: 'INITIAL_CARDS',\n    cards: data\n  };\n};\n\nexport const addItem = (item) => {\n  return {\n    type: 'ADD',\n    item\n  };\n};\n\n// Reducers\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'INITIAL_CARDS':\n      return {\n        cards: action.cards\n      };\n    case 'ADD':\n      return {\n        ...state,\n        cards: [...state.cards, action.item]\n      };\n    default: \n      return state;\n  }\n};\n\n// create store\nexport const initStore = (initState = startState) => {\n  return createStore(\n    reducer,\n    initState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  );\n};"]},"metadata":{},"sourceType":"module"}