{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport data from './data/data.json'; // initial state\n\nvar startState = {\n  cards: []\n}; // actions\n\nexport var initialCards = function initialCards() {\n  return {\n    type: 'INITIAL_CARDS',\n    cards: data\n  };\n};\nexport var addItem = function addItem(item) {\n  return {\n    type: 'ADD',\n    item: item\n  };\n}; // Reducers\n\nexport var reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'INITIAL_CARDS':\n      return {\n        cards: action.cards\n      };\n\n    case 'ADD':\n      return _objectSpread({}, state, {\n        cards: [].concat(_toConsumableArray(state.cards), [action.item])\n      });\n\n    default:\n      return state;\n  }\n}; // create store\n\nexport var initStore = function initStore() {\n  var initState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : startState;\n  return createStore(reducer, initState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};","map":{"version":3,"sources":["/Users/andrewmac/Desktop/ssr/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","data","startState","cards","initialCards","type","addItem","item","reducer","state","action","initStore","initState"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CAEA;;AACA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB,C,CAIA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELF,IAAAA,KAAK,EAAEF;AAFF,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC/B,SAAO;AACLF,IAAAA,IAAI,EAAE,KADD;AAELE,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACxC,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAEO,MAAM,CAACP;AADT,OAAP;;AAGF,SAAK,KAAL;AACE,+BACKM,KADL;AAEEN,QAAAA,KAAK,+BAAMM,KAAK,CAACN,KAAZ,IAAmBO,MAAM,CAACH,IAA1B;AAFP;;AAIF;AACE,aAAOE,KAAP;AAXJ;AAaD,CAdM,C,CAgBP;;AACA,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,GAA4B;AAAA,MAA3BC,SAA2B,uEAAfV,UAAe;AACnD,SAAOL,WAAW,CAChBW,OADgB,EAEhBI,SAFgB,EAGhBb,mBAAmB,CAACD,eAAe,CAACE,eAAD,CAAhB,CAHH,CAAlB;AAKD,CANM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport data from './data/data.json';\n\n// initial state\nconst startState = {\n  cards: []\n};\n\n// actions\nexport const initialCards = () => {\n  return {\n    type: 'INITIAL_CARDS',\n    cards: data\n  };\n};\n\nexport const addItem = (item) => {\n  return {\n    type: 'ADD',\n    item\n  };\n};\n\n// Reducers\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'INITIAL_CARDS':\n      return {\n        cards: action.cards\n      };\n    case 'ADD':\n      return {\n        ...state,\n        cards: [...state.cards, action.item]\n      };\n    default: \n      return state;\n  }\n};\n\n// create store\nexport const initStore = (initState = startState) => {\n  return createStore(\n    reducer,\n    initState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  );\n};"]},"metadata":{},"sourceType":"module"}